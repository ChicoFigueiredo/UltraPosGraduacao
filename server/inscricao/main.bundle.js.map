{"version":3,"sources":["./src/$_lazy_route_resource lazy","./src/app/app-routing.module.ts","./src/app/app.component.html","./src/app/app.component.scss","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/component/form-inscricao/form-inscricao.component.html","./src/app/component/form-inscricao/form-inscricao.component.scss","./src/app/component/form-inscricao/form-inscricao.component.ts","./src/app/services/api-ultra.service.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/$$_lazy_route_resource lazy\n// module id = ./src/$$_lazy_route_resource lazy recursive\n// module chunks = main","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { FormInscricaoComponent } from './component/form-inscricao/form-inscricao.component';\r\n\r\nconst routes: Routes = [\r\n  { path: '', component: FormInscricaoComponent},\r\n  { path: ':id', component: FormInscricaoComponent},\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app-routing.module.ts","module.exports = \"<!-- <app-form-inscricao></app-form-inscricao> -->\\r\\n<router-outlet></router-outlet>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.html\n// module id = ./src/app/app.component.html\n// module chunks = main","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.scss\n// module id = ./src/app/app.component.scss\n// module chunks = main","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss']\r\n})\r\nexport class AppComponent {\r\n  title = 'app';\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.component.ts","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule, LOCALE_ID } from '@angular/core';\r\n\r\nimport localePTBR from '@angular/common/locales/pt';\r\nimport { registerLocaleData } from '@angular/common';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\n\r\nimport {NgxMaskModule} from 'ngx-mask';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { FormInscricaoComponent } from './component/form-inscricao/form-inscricao.component';\r\nimport { ApiUltraService } from './services/api-ultra.service';\r\nimport { HttpClient, HttpHeaders, HttpClientModule } from '@angular/common/http';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\nregisterLocaleData(localePTBR);\r\n\r\nconst options = {};\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    FormInscricaoComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    HttpClientModule,\r\n    FormsModule,\r\n    NgxMaskModule.forRoot(options),\r\n  ],\r\n  providers: [\r\n    ApiUltraService,\r\n    HttpClientModule,\r\n    { provide: LOCALE_ID, useValue: 'pt' },\r\n  ],\r\n  bootstrap: [\r\n    AppComponent\r\n  ]\r\n})\r\nexport class AppModule { }\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.module.ts","module.exports = \"<div class=\\\"container-fluid\\\">\\r\\n    <!-- Form Aluno: {{ formAluno.form.valid | json }} / CPF {{cpfInput.errors | json}} / CPF {{cpfInput.hasError('pattern') | json}} / CPF {{cpfInput.value | json}}<br>\\r\\n    WhatsApp: {{whatsappInput.errors | json}} | CEP: {{cepInput.errors | json}}| e-mail: {{emailInput.errors | json}} -->\\r\\n    <div class=\\\"row\\\">\\r\\n        <div class=\\\"container-fluid shadow\\\">\\r\\n            <div class=\\\"row\\\">\\r\\n                <div id=\\\"valErr\\\" class=\\\"row viewerror clearfix hidden\\\">\\r\\n                    <div class=\\\"alert alert-danger\\\">Oops! Seems there are some errors..</div>\\r\\n                </div>\\r\\n                <div id=\\\"valOk\\\" class=\\\"row viewerror clearfix hidden\\\">\\r\\n                    <div class=\\\"alert alert-success\\\">Yay! ..</div>\\r\\n                </div>\\r\\n\\r\\n\\r\\n                <div class=\\\"row\\\">\\r\\n                    <div class=\\\"col-md-12\\\">\\r\\n                        <div class=\\\"form-group brdbot\\\">\\r\\n                            <h3>Fomulário de Matricula</h3>\\r\\n                            <div class=\\\"controls col-sm-9\\\">\\r\\n\\r\\n                                <p id=\\\"field1\\\" data-default-label=\\\"Header\\\" data-default-is-header=\\\"true\\\" data-control-type=\\\"header\\\"></p><span id=\\\"errId1\\\" class=\\\"error\\\"></span></div>\\r\\n\\r\\n                        </div>\\r\\n                        <div class=\\\"row\\\">\\r\\n                            <div class=\\\"col-md-6\\\">\\r\\n                                <div id=\\\"panel2\\\" class=\\\"panelcepInput panel-default\\\" data-role=\\\"panel\\\">\\r\\n                                    <div class=\\\"panel-heading\\\">Dados do aluno</div>\\r\\n                                    <div class=\\\"panel-body\\\">\\r\\n                                        <form #formAluno=\\\"ngForm\\\" action=\\\"../submit\\\" id=\\\"formentry\\\" class=\\\"form-horizontal\\\" role=\\\"form\\\" data-parsley-validate novalidate>\\r\\n\\r\\n                                            <div class=\\\"form-group\\\">\\r\\n                                                <label class=\\\"control-label-left\\\" for=\\\"cpf\\\">CPF:<span class=\\\"req\\\"> *</span></label>\\r\\n                                                <div class=\\\"controls\\\">\\r\\n                                                    <input #cpfInput=\\\"ngModel\\\" id=\\\"cpf\\\" [(ngModel)]='alunoAtual.cpf' type=\\\"text\\\" class=\\\"form-control k-textbox\\\" data-role=\\\"mask\\\" data-mask=\\\"999.999.999-99\\\" placeholder=\\\"Digite seu CPF\\\" maxlength=\\\"28\\\" required=\\\"required\\\" name=\\\"cpf\\\" data-parsley-errors-container=\\\"#errId2\\\"\\r\\n                                                        (keyup)=\\\"onKeyCPF($event)\\\" pattern=\\\"[0-9]{3}\\\\.[0-9]{3}\\\\.[0-9]{3}-[0-9]{2}\\\">\\r\\n                                                    <span #erroCPF id=\\\"errId2\\\" class=\\\"error\\\" *ngIf=\\\"(cpfInput.invalid || !alunoService.validarCPF(cpfInput.value)) && (cpfInput.dirty || cpfInput.touched)\\\">CPF inválido ou incompleto</span>\\r\\n                                                </div>\\r\\n\\r\\n                                            </div>\\r\\n                                            <div class=\\\"form-group\\\">\\r\\n                                                <label class=\\\"control-label-left\\\" for=\\\"nome\\\">Nome:<span class=\\\"req\\\"> *</span></label>\\r\\n                                                <div class=\\\"controls\\\">\\r\\n\\r\\n                                                    <input #nomeInput=\\\"ngModel\\\" id=\\\"nome\\\" [(ngModel)]='alunoAtual.nome' type=\\\"text\\\" class=\\\"form-control k-textbox\\\" data-role=\\\"text\\\" placeholder=\\\"Digite seu nome\\\" required=\\\"required\\\" name=\\\"nome\\\" data-parsley-errors-container=\\\"#errId3\\\">\\r\\n                                                    <span id=\\\"errId3\\\" class=\\\"error\\\" *ngIf=\\\"nomeInput.invalid && (nomeInput.dirty || nomeInput.touched)\\\">Nome deve ser preenchido</span>\\r\\n                                                </div>\\r\\n\\r\\n                                            </div>\\r\\n                                            <div class=\\\"form-group\\\">\\r\\n                                                <label class=\\\"control-label-left\\\" for=\\\"email\\\">e-mail:<span class=\\\"req\\\"> *</span></label>\\r\\n                                                <div class=\\\"controls\\\">\\r\\n\\r\\n                                                    <input #emailInput=\\\"ngModel\\\" id=\\\"email\\\" [(ngModel)]='alunoAtual.email' type=\\\"text\\\" class=\\\"form-control k-textbox\\\" data-role=\\\"text\\\" placeholder=\\\"Digite seu e-mail\\\" required=\\\"required\\\" name=\\\"email\\\" data-parsley-errors-container=\\\"#errId4\\\" pattern='^[_A-Za-z0-9-\\\\+]+(\\\\.[_A-Za-z0-9-]+)*@[A-Za-z0-9-]+(\\\\.[A-Za-z0-9]+)*(\\\\.[A-Za-z]{2,})$'>\\r\\n                                                    <span id=\\\"errId4\\\" class=\\\"error\\\" *ngIf=\\\"emailInput.invalid && (emailInput.dirty || emailInput.touched)\\\">e-mail não validado</span>\\r\\n                                                </div>\\r\\n\\r\\n                                            </div>\\r\\n                                            <div class=\\\"form-group\\\">\\r\\n                                                <label class=\\\"control-label-left\\\" for=\\\"whatsapp\\\">WhatsApp:<span class=\\\"req\\\"> *</span></label>\\r\\n                                                <div class=\\\"controls\\\">\\r\\n\\r\\n                                                    <input #whatsappInput=\\\"ngModel\\\" id=\\\"whatsapp\\\" [(ngModel)]='alunoAtual.whatsapp' type=\\\"text\\\" class=\\\"form-control k-textbox\\\" data-role=\\\"mask\\\" placeholder=\\\"Digite seu celular com WhatsApp\\\" data-mask=\\\"(99) 99999-9999\\\" required=\\\"required\\\" name=\\\"whatsapp\\\" data-parsley-errors-container=\\\"#errId5\\\"\\r\\n                                                        pattern=\\\"[(][0-9]{2}[)] [0-9]{5}[-][0-9]{3,4}[_]{0,1}\\\" (keyup)='onKeyWhatsapp($event)'>\\r\\n                                                    <span id=\\\"errId5\\\" class=\\\"error\\\" *ngIf=\\\"whatsappInput.invalid && (whatsappInput.dirty || whatsappInput.touched)\\\">Telefone invalido</span>\\r\\n                                                </div>\\r\\n\\r\\n                                            </div>\\r\\n                                            <div class=\\\"form-group\\\">\\r\\n                                                <label class=\\\"control-label-left\\\" for=\\\"celularAlternativo\\\">Celular:</label>\\r\\n                                                <div class=\\\"controls\\\">\\r\\n\\r\\n                                                    <input #celularInput=\\\"ngModel\\\" id=\\\"celularAlternativo\\\" [(ngModel)]='alunoAtual.celular' type=\\\"text\\\" class=\\\"form-control k-textbox\\\" data-role=\\\"mask\\\" data-mask=\\\"(99) 99999-9999\\\" placeholder=\\\"Digite o número do celular (alternativo)\\\" name=\\\"celularAlternativo\\\"\\r\\n                                                        data-parsley-errors-container=\\\"#errId6\\\">\\r\\n                                                    <span id=\\\"errId6\\\" class=\\\"error\\\"></span>\\r\\n                                                </div>\\r\\n\\r\\n                                            </div>\\r\\n                                            <div class=\\\"form-group\\\" style=\\\"display: block;\\\">\\r\\n                                                <label class=\\\"control-label-left sr-only\\\"></label>\\r\\n                                                <div class=\\\"controls\\\">\\r\\n\\r\\n                                                    <label class=\\\"checkbox\\\" for=\\\"opcaoSMS\\\"><input type=\\\"checkbox\\\" [(ngModel)]='alunoAtual.opcaoSMS'  value=\\\"Ao marcar esta opção, você receberá novidades e promoções do Portal por E-mail, SMS e Telefone.\\\" id=\\\"opcaoSMS\\\" name=\\\"field11\\\" data-parsley-errors-container=\\\"#errId7\\\">Ao marcar esta opção, você receberá novidades e promoções do Portal por E-mail, SMS e Telefone.</label>\\r\\n                                                    <span id=\\\"errId7\\\" class=\\\"error\\\"></span>\\r\\n                                                </div>\\r\\n\\r\\n                                            </div>\\r\\n                                            <div class=\\\"form-group\\\">\\r\\n                                                <label class=\\\"control-label-left\\\" for=\\\"cep\\\">CEP:<span class=\\\"req\\\"> *</span></label>\\r\\n                                                <div class=\\\"controls\\\">\\r\\n\\r\\n                                                    <input #cepInput=\\\"ngModel\\\" id=\\\"cep\\\" type=\\\"text\\\" [(ngModel)]='alunoAtual.cep' class=\\\"form-control k-textbox\\\" data-role=\\\"mask\\\" data-mask=\\\"99999-999\\\" required=\\\"required\\\" placeholder=\\\"Digite seu CEP (o formulário se auto-completará\\\" name=\\\"cep\\\" data-parsley-errors-container=\\\"#errId8\\\"\\r\\n                                                        pattern=\\\"\\\\d{5}[-]\\\\d{3}\\\" (keyup)='onKeyCEP($event)'>\\r\\n                                                    <span id=\\\"errId8\\\" class=\\\"error\\\" *ngIf=\\\"cepInput.invalid && (cepInput.dirty || cepInput.touched)\\\">CEP inválido</span>\\r\\n                                                </div>\\r\\n\\r\\n                                            </div>\\r\\n                                            <div class=\\\"form-group\\\">\\r\\n                                                <label class=\\\"control-label-left\\\" for=\\\"endereco\\\">endereço:<span class=\\\"req\\\"> *</span></label>\\r\\n                                                <div class=\\\"controls\\\">\\r\\n\\r\\n                                                    <input #enderecoInput=\\\"ngModel\\\" id=\\\"endereco\\\" [(ngModel)]='alunoAtual.endereco' type=\\\"text\\\" class=\\\"form-control k-textbox\\\" data-role=\\\"text\\\" required=\\\"required\\\" placeholder=\\\"Digite o endereço onde mora\\\" name=\\\"endereco\\\" data-parsley-errors-container=\\\"#errId9\\\">\\r\\n                                                    <span id=\\\"errId9\\\" class=\\\"error\\\" *ngIf=\\\"enderecoInput.invalid && (enderecoInput.dirty || enderecoInput.touched)\\\">Necessário preencher o endereço</span>\\r\\n                                                </div>\\r\\n\\r\\n                                            </div>\\r\\n                                            <div class=\\\"form-group\\\">\\r\\n                                                <label class=\\\"control-label-left\\\" for=\\\"numero\\\">número:<span class=\\\"req\\\"> *</span></label>\\r\\n                                                <div class=\\\"controls\\\">\\r\\n\\r\\n                                                    <input #numeroInput=\\\"ngModel\\\" id=\\\"numero\\\" [(ngModel)]='alunoAtual.numero' type=\\\"text\\\" class=\\\"form-control k-textbox\\\" data-role=\\\"text\\\" required=\\\"required\\\" name=\\\"numero\\\" placeholder=\\\"Digite o número de sua casa\\\" data-parsley-errors-container=\\\"#errId10\\\">\\r\\n                                                    <span id=\\\"errId10\\\" class=\\\"error\\\"></span>\\r\\n                                                </div>\\r\\n\\r\\n                                            </div>\\r\\n                                            <div class=\\\"form-group\\\">\\r\\n                                                <label class=\\\"control-label-left\\\" for=\\\"complemento\\\">Complemento:</label>\\r\\n                                                <div class=\\\"controls\\\">\\r\\n\\r\\n                                                    <input id=\\\"complemento\\\" [(ngModel)]='alunoAtual.complemento' type=\\\"text\\\" class=\\\"form-control k-textbox\\\" data-role=\\\"text\\\" name=\\\"complemento\\\" placeholder=\\\"Digite a complementação do seu endereço\\\" data-parsley-errors-container=\\\"#errId11\\\">\\r\\n                                                    <span id=\\\"errId11\\\" class=\\\"error\\\"></span>\\r\\n                                                </div>\\r\\n\\r\\n                                            </div>\\r\\n                                            <div class=\\\"form-group\\\">\\r\\n                                                <label class=\\\"control-label-left\\\" for=\\\"bairro\\\">Bairro:<span class=\\\"req\\\"> *</span></label>\\r\\n                                                <div class=\\\"controls\\\">\\r\\n\\r\\n                                                    <input #bairroInput=\\\"ngModel\\\" id=\\\"bairro\\\" [(ngModel)]='alunoAtual.bairro' type=\\\"text\\\" class=\\\"form-control k-textbox\\\" data-role=\\\"text\\\" required=\\\"required\\\" name=\\\"bairro\\\" placeholder=\\\"Digite o bairro onde mora\\\" data-parsley-errors-container=\\\"#errId12\\\">\\r\\n                                                    <span id=\\\"errId12\\\" class=\\\"error\\\"></span>\\r\\n                                                </div>\\r\\n\\r\\n                                            </div>\\r\\n                                            <div class=\\\"form-group\\\">\\r\\n                                                <label class=\\\"control-label-left\\\" for=\\\"cidade\\\">Cidade:<span class=\\\"req\\\"> *</span></label>\\r\\n                                                <div class=\\\"controls\\\">\\r\\n\\r\\n                                                    <input #cidadeInput=\\\"ngModel\\\" id=\\\"cidade\\\" [(ngModel)]='alunoAtual.cidade' type=\\\"text\\\" class=\\\"form-control k-textbox\\\" data-role=\\\"text\\\" required=\\\"required\\\" name=\\\"cidade\\\" placeholder=\\\"Digite a cidade onde mora\\\" data-parsley-errors-container=\\\"#errId13\\\">\\r\\n                                                    <span id=\\\"errId13\\\" class=\\\"error\\\"></span>\\r\\n                                                </div>\\r\\n\\r\\n                                            </div>\\r\\n                                            <div class=\\\"form-group\\\">\\r\\n                                                <label class=\\\"control-label\\\" for=\\\"uf\\\">UF:<span class=\\\"req\\\"> *</span></label>\\r\\n                                                <div class=\\\"controls\\\">\\r\\n                                                    <select #ufInput=\\\"ngModel\\\" id=\\\"uf\\\" [(ngModel)]=\\\"alunoAtual.uf\\\" class=\\\"form-control\\\" required=\\\"required\\\" name=\\\"uf\\\" data-parsley-errors-container=\\\"#errId14\\\">\\r\\n                                                      <option *ngFor='let u of ufs' [value]=\\\"u.sigla\\\" [selected]=\\\"alunoAtual.uf == u.sigla\\\" >{{u.nome}}</option>\\r\\n                                                    </select><span id=\\\"errId14\\\" class=\\\"error\\\"></span>\\r\\n                                                </div>\\r\\n\\r\\n                                            </div>\\r\\n                                            <div class=\\\"form-group\\\">\\r\\n                                                <label class=\\\"control-label-left\\\" for=\\\"ufNaturalidade\\\">UF Naturalidade:<span class=\\\"req\\\"> *</span></label>\\r\\n                                                <div class=\\\"controls\\\">\\r\\n\\r\\n                                                    <select #ufNatural=\\\"ngModel\\\" id=\\\"ufNaturalidade\\\" [(ngModel)]=\\\"alunoAtual.ufNaturalidade\\\" class=\\\"form-control\\\" required=\\\"required\\\" name=\\\"ufNaturalidade\\\" data-parsley-errors-container=\\\"#errId15\\\">\\r\\n                                                        <option *ngFor='let u of ufs' [value]=\\\"u.sigla\\\" [selected]=\\\"alunoAtual.uf == u.sigla\\\" >{{u.nome}}</option>\\r\\n                                                    </select><span id=\\\"errId15\\\" class=\\\"error\\\"></span>\\r\\n                                                </div>\\r\\n\\r\\n                                            </div>\\r\\n                                            <div class=\\\"form-group\\\">\\r\\n                                                <label class=\\\"control-label-left\\\" for=\\\"cidadeNaturalidade\\\">Cidade Naturalidade:<span class=\\\"req\\\"> *</span></label>\\r\\n                                                <div class=\\\"controls\\\">\\r\\n\\r\\n                                                    <select #cidadeNaturalidadeInput=\\\"ngModel\\\" id=\\\"cidadeNaturalidade\\\" [(ngModel)]=\\\"alunoAtual.cidadeNaturalidade\\\" class=\\\"form-control\\\" required=\\\"required\\\" name=\\\"cidadeNaturalidade\\\" data-parsley-errors-container=\\\"#errId16\\\">\\r\\n                                                        <option *ngFor='let u of getMunicipiosDaUF(ufNatural.value)' [value]=\\\"u.nome\\\" >{{u.nome}}</option>\\r\\n                                                    </select><span id=\\\"errId16\\\" class=\\\"error\\\"></span>\\r\\n                                                </div>\\r\\n\\r\\n                                            </div>\\r\\n                                            <div class=\\\"form-group\\\">\\r\\n                                                <label class=\\\"control-label control-label-left col-sm-3\\\">Sexo:</label>\\r\\n                                                <div class=\\\"controls col-sm-9\\\">\\r\\n\\r\\n                                                    <label class=\\\"radio col-md-6\\\" for=\\\"sexoFeminino\\\">\\r\\n                                                    <input type=\\\"radio\\\"  [(ngModel)]=\\\"alunoAtual.sexo\\\" [value]=\\\"'F'\\\" id=\\\"sexoFeminino\\\" name=\\\"sexo\\\" data-parsley-errors-container=\\\"#errId17\\\">Feminino</label>\\r\\n                                                    <label class=\\\"radio col-md-6\\\" for=\\\"sexoMasculino\\\">\\r\\n                                                    <input type=\\\"radio\\\" [(ngModel)]=\\\"alunoAtual.sexo\\\" [value]=\\\"'M'\\\" id=\\\"sexoMasculino\\\" name=\\\"sexo\\\" data-parsley-errors-container=\\\"#errId17\\\">Masculino</label>\\r\\n                                                    <span id=\\\"errId17\\\" class=\\\"error\\\"></span></div>\\r\\n\\r\\n                                            </div>\\r\\n\\r\\n                                            <div class=\\\"form-group\\\">\\r\\n                                                <label class=\\\"control-label-left\\\" for=\\\"dataNascimento\\\">Data Nascimento:<span class=\\\"req\\\"> *</span></label>\\r\\n                                                <div class=\\\"controls\\\">\\r\\n                                                    <input #dataNascimentoInput=\\\"ngModel\\\" id=\\\"dataNascimento\\\" [(ngModel)]='alunoAtual.dataNascimento' type=\\\"date\\\" class=\\\"form-control k-input\\\" data-error-container=\\\"#errfield95\\\" required=\\\"required\\\" style=\\\"width: 100%;\\\" name=\\\"dataNascimento\\\" data-parsley-errors-container=\\\"#errId18\\\">\\r\\n\\r\\n                                                    <span id=\\\"errId18\\\" class=\\\"error\\\"></span>\\r\\n                                                </div>\\r\\n\\r\\n                                            </div>\\r\\n                                            <div class=\\\"form-group\\\">\\r\\n                                                <label class=\\\"control-label-left\\\" for=\\\"estadoCivil\\\">Estado Civil:<span class=\\\"req\\\"> *</span></label>\\r\\n                                                <div class=\\\"controls\\\">\\r\\n\\r\\n                                                    <select #estadoCivilInput=\\\"ngModel\\\" id=\\\"estadoCivil\\\" [(ngModel)]='alunoAtual.estadoCivil' class=\\\"form-control\\\" selected=\\\"selected\\\" name=\\\"estadoCivil\\\" required=\\\"required\\\" data-parsley-errors-container=\\\"#errId19\\\">\\r\\n                                                        <option value=\\\"Selecione\\\" selected=\\\"selected\\\">Selecione</option>\\r\\n                                                        <option value=\\\"Solteira(o)\\\">Solteira(o)</option>\\r\\n                                                        <option value=\\\"Casada(o)\\\">Casada(o)</option>\\r\\n                                                        <option value=\\\"União estável\\\">União estável</option>\\r\\n                                                        <option value=\\\"Divorciada(o)\\\">Divorciada(o)</option>\\r\\n                                                        <option value=\\\"Viúva(o)\\\">Viúva(o)</option></select>\\r\\n                                                    <span id=\\\"errId19\\\" class=\\\"error\\\"></span>\\r\\n                                                </div>\\r\\n\\r\\n                                            </div>\\r\\n                                            <div class=\\\"form-group\\\">\\r\\n                                                <label class=\\\"control-label-left\\\" for=\\\"identidade\\\">número da Identidade<span class=\\\"req\\\"> *</span></label>\\r\\n                                                <div class=\\\"controls\\\">\\r\\n\\r\\n                                                    <input #identidadeInput=\\\"ngModel\\\" id=\\\"identidade\\\" [(ngModel)]='alunoAtual.numeroIdentidade' type=\\\"text\\\" class=\\\"form-control k-textbox\\\" data-role=\\\"text\\\" placeholder=\\\"Digite o número da identidade\\\" name=\\\"identidade\\\" required=\\\"required\\\" data-parsley-errors-container=\\\"#errId20\\\">\\r\\n                                                    <span id=\\\"errId20\\\" class=\\\"error\\\"></span>\\r\\n                                                </div>\\r\\n\\r\\n                                            </div>\\r\\n                                            <div class=\\\"form-group\\\">\\r\\n                                                <label class=\\\"control-label-left\\\" for=\\\"orgaoIdentidade\\\">Orgão Expedidor<span class=\\\"req\\\"> *</span></label>\\r\\n                                                <div class=\\\"controls\\\">\\r\\n\\r\\n                                                    <input #orgaoIdentidadeInput=\\\"ngModel\\\" id=\\\"orgaoIdentidade\\\" [(ngModel)]='alunoAtual.orgaoExpedidor' type=\\\"text\\\" class=\\\"form-control k-textbox\\\" data-role=\\\"text\\\" placeholder=\\\"Digite o orgão expedidor da identidade\\\" name=\\\"orgaoIdentidade\\\" required=\\\"required\\\"\\r\\n                                                        data-parsley-errors-container=\\\"#errId21\\\">\\r\\n                                                    <span id=\\\"errId21\\\" class=\\\"error\\\"></span>\\r\\n                                                </div>\\r\\n\\r\\n                                            </div>\\r\\n                                            <div class=\\\"form-group\\\" style=\\\"display: block;\\\">\\r\\n                                                <label class=\\\"control-label-left\\\" for=\\\"mae\\\">Nome da Mãe<span class=\\\"req\\\"> *</span></label>\\r\\n                                                <div class=\\\"controls\\\">\\r\\n\\r\\n                                                    <input #maeInput=\\\"ngModel\\\" id=\\\"mae\\\" [(ngModel)]='alunoAtual.nomeMae' type=\\\"text\\\" class=\\\"form-control k-textbox\\\" data-role=\\\"text\\\" placeholder=\\\"Digite o nome da mãe\\\" name=\\\"mae\\\" required=\\\"required\\\" data-parsley-errors-container=\\\"#errId22\\\">\\r\\n                                                    <span id=\\\"errId22\\\" class=\\\"error\\\"></span>\\r\\n                                                </div>\\r\\n\\r\\n                                            </div>\\r\\n                                            <div class=\\\"form-group\\\">\\r\\n                                                <label class=\\\"control-label-left\\\" for=\\\"pai\\\">Nome do Pai:</label>\\r\\n                                                <div class=\\\"controls\\\">\\r\\n\\r\\n                                                    <input id=\\\"pai\\\" [(ngModel)]='alunoAtual.nomePai' type=\\\"text\\\" class=\\\"form-control k-textbox\\\" data-role=\\\"text\\\" placeholder=\\\"Digite o nome do pai\\\" name=\\\"pai\\\" data-parsley-errors-container=\\\"#errId23\\\">\\r\\n                                                    <span id=\\\"errId23\\\" class=\\\"error\\\"></span>\\r\\n                                                </div>\\r\\n\\r\\n                                            </div>\\r\\n                                        </form>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div class=\\\"col-md-6\\\">\\r\\n                                <div id=\\\"panel3\\\" class=\\\"panel panel-default\\\" data-role=\\\"panel\\\">\\r\\n                                    <div class=\\\"panel-heading\\\">Financeiro</div>\\r\\n                                    <div class=\\\"panel-body\\\">\\r\\n\\r\\n                                        <div class=\\\"form-group\\\">\\r\\n                                            <label class=\\\"control-label-left\\\" for=\\\"categoriaSelecionado\\\">Categoria de cursos:</label>\\r\\n                                            <div class=\\\"controls\\\">\\r\\n                                                <select [(ngModel)]='cursoEscolhido.codigoCategoria' #vCategoria id=\\\"categoriaSelecionado\\\" class=\\\"form-control\\\" name=\\\"categoriaSelecionado\\\" data-parsley-errors-container=\\\"#errId24\\\">\\r\\n                                                            <option *ngFor='let c of categorias' [value]=\\\"c.id\\\" >{{c.name.pt}}</option>\\r\\n                                                    </select><span id=\\\"errId24\\\" class=\\\"error\\\"></span>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n\\r\\n                                        <div class=\\\"form-group\\\">\\r\\n                                            <label class=\\\"control-label-left\\\" for=\\\"cursoSelecionado\\\">Escolha o curso:</label>\\r\\n                                            <div class=\\\"controls\\\">\\r\\n\\r\\n                                                <select [(ngModel)]='cursoEscolhido.codigoCurso' id=\\\"cursoSelecionado\\\" class=\\\"form-control\\\" name=\\\"cursoSelecionado\\\" data-parsley-errors-container=\\\"#errId24\\\" (change)='selectCurso($event)'>\\r\\n                                                            <option *ngFor='let c of getCursosDaCategoria(vCategoria.value)' [value]=\\\"c.id\\\" >{{c.name.pt}}</option>\\r\\n                                                    </select><span id=\\\"errId24\\\" class=\\\"error\\\"></span>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                        <div class=\\\"form-group\\\">\\r\\n                                            <label class=\\\"control-label-left sr-only\\\"></label>\\r\\n                                            <div class=\\\"controls\\\">\\r\\n\\r\\n                                                <label class=\\\"checkbox\\\" for=\\\"marcaConcordo\\\"><input type=\\\"checkbox\\\" value=\\\"Li e estou de acordo com os Termos do Contrato\\\" id=\\\"marcaConcordo\\\" name=\\\"field181\\\" data-parsley-errors-container=\\\"#errId25\\\">Li e estou de acordo com os Termos do Contrato</label>\\r\\n                                                <span id=\\\"errId25\\\" class=\\\"error\\\"></span>\\r\\n                                            </div>\\r\\n\\r\\n                                        </div>\\r\\n                                        <div class=\\\"form-group\\\" style=\\\"display: block;\\\">\\r\\n                                            <label class=\\\"control-label-left\\\" for=\\\"matricula\\\">Taxa de Matricula<span class=\\\"req\\\"> *</span></label>\\r\\n                                            <div class=\\\"controls\\\">\\r\\n\\r\\n                                                <select #selMatricula id=\\\"matricula\\\" [(ngModel)]='cursoEscolhido.pagamento.taxaMatricula' class=\\\"form-control\\\" selected=\\\"selected\\\" name=\\\"matricula\\\" required=\\\"required\\\" data-parsley-errors-container=\\\"#errId26\\\">\\r\\n                                                        <option value=\\\"{{cursoEscolhido.pagamento.taxaMatricula}}\\\" selected=\\\"selected\\\">{{cursoEscolhido.pagamento.taxaMatricula | currency:'BRL':'symbol':'.2-2'}}</option>\\r\\n                                                    </select>\\r\\n                                                <span id=\\\"errId26\\\" class=\\\"error\\\"></span>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n\\r\\n                                        <div class=\\\"form-group\\\" style=\\\"display: block;\\\">\\r\\n                                            <label class=\\\"control-label-left\\\" for=\\\"mensalidade\\\">Valor da Mensalidade<span class=\\\"req\\\"> *</span></label>\\r\\n                                            <div class=\\\"controls\\\">\\r\\n                                                <select #selMensalidade [(ngModel)]='cursoEscolhido.pagamento.parcelamento' id=\\\"mensalidade\\\" class=\\\"form-control\\\" selected=\\\"selected\\\" name=\\\"mensalidade\\\" required=\\\"required\\\" data-parsley-errors-container=\\\"#errId27\\\">\\r\\n                                                        <option *ngFor='let m of valoresMensalidade' [value]=\\\"m.prestacoes\\\" selected=\\\"selected\\\">{{m.prestacoes | number:'2.0-0'}}X de {{m.valor | currency:'BRL':'symbol':'.2-2'}}</option>\\r\\n                                                    </select>\\r\\n                                                <span id=\\\"errId27\\\" class=\\\"error\\\"></span>\\r\\n                                            </div>\\r\\n\\r\\n                                        </div>\\r\\n                                        <div class=\\\"form-group\\\">\\r\\n                                            <label class=\\\"control-label-left\\\" for=\\\"melhorDiaPrestacao\\\">Melhor dia para pagamento da mensalidade:<span class=\\\"req\\\"> *</span></label>\\r\\n                                            <div class=\\\"controls\\\">\\r\\n\\r\\n                                                <select [(ngModel)]='cursoEscolhido.pagamento.melhorDia' id=\\\"melhorDiaPrestacao\\\" class=\\\"form-control\\\" required=\\\"required\\\" name=\\\"melhorDiaPrestacao\\\" data-parsley-errors-container=\\\"#errId28\\\">\\r\\n                                                        <option value=\\\"5\\\">todo dia 05 do mês</option>\\r\\n                                                        <option value=\\\"10\\\">todo dia 10 do mês</option>\\r\\n                                                        <option value=\\\"15\\\">todo dia 15 do mês</option>\\r\\n                                                        <option value=\\\"20\\\">todo dia 20 do mês</option>\\r\\n                                                        <option value=\\\"25\\\">todo dia 25 do mês</option>\\r\\n                                                    </select><span id=\\\"errId28\\\" class=\\\"error\\\"></span></div>\\r\\n\\r\\n                                        </div>\\r\\n                                        <div class=\\\"form-group\\\" style=\\\"display: block;\\\">\\r\\n                                            <label class=\\\"control-label-left\\\" for=\\\"cupom\\\">Aplicar o cupom</label>\\r\\n                                            <div class=\\\"controls\\\">\\r\\n                                                <input #txtCupom [(ngModel)]='cursoEscolhido.pagamento.cupom.codigoCupom' id=\\\"cupom\\\" type=\\\"text\\\" class=\\\"form-control k-textbox\\\" data-role=\\\"text\\\" placeholder=\\\"Digite o cupom e clique em aplicar\\\" name=\\\"cupom\\\" data-parsley-errors-container=\\\"#errId29\\\">\\r\\n                                                <span id=\\\"errId29\\\" class=\\\"error\\\"></span>\\r\\n                                            </div>\\r\\n\\r\\n                                        </div>\\r\\n                                        <div class=\\\"form-group btn-group group-inline\\\" style=\\\"display: block;\\\">\\r\\n                                            <div class=\\\"controls\\\">\\r\\n                                                <button #btnCupom id=\\\"btnCupom\\\" type=\\\"button\\\" class=\\\"btn btn-primary\\\" name=\\\"Aplicar Cupom!\\\" (click)='aplicarCupom(txtCupom.value)'>Aplicar Cupom!</button>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n\\r\\n                                        <div class=\\\"form-group\\\" style=\\\"display: block;\\\">\\r\\n                                            <label class=\\\"control-label-left\\\" for=\\\"cupom\\\">FORMA DE PAGAMENTO</label>\\r\\n                                        </div>\\r\\n                                        <div class=\\\"row\\\" id=\\\"tab188\\\" data-role=\\\"tab\\\" style=\\\"display: block;\\\" *ngIf=\\\"cursoEscolhido.pagamento.taxaMatricula || cursoEscolhido.pagamento.valorCobrado || false\\\">\\r\\n                                            <ul class=\\\"nav nav-tabs\\\">\\r\\n                                                <li class=\\\"\\\">\\r\\n                                                    <a href=\\\"#tabContent189\\\" data-toggle=\\\"tab\\\" id=\\\"tabLabel189\\\"><img class=\\\"icon\\\" src=\\\"assets/images/icons/boleto.svg\\\"> Boleto Bancário</a>\\r\\n                                                </li>\\r\\n                                                <li class=\\\"active\\\">\\r\\n                                                    <a data-toggle=\\\"tab\\\" href=\\\"#tabContent190\\\" id=\\\"tabLabel190\\\"><img class=\\\"icon\\\" src=\\\"assets/images/icons/credit-card.svg\\\"> Cartão de Crédito</a>\\r\\n                                                </li>\\r\\n\\r\\n                                            </ul>\\r\\n                                            <div class=\\\"tab-content\\\">\\r\\n                                                <div class=\\\"tab-pane\\\" id=\\\"tabContent189\\\">\\r\\n                                                    <div class=\\\"\\\">\\r\\n                                                        <div class=\\\"form-group\\\">\\r\\n                                                            <label class=\\\"control-label\\\">Será gerado:</label>\\r\\n                                                            <div class=\\\"controls\\\">\\r\\n\\r\\n                                                                <label class=\\\"checkbox\\\" for=\\\"primeiroBoleto\\\">\\r\\n                                                                        <input checked=\\\"checked\\\" disabled type=\\\"checkbox\\\" value=\\\"266,67\\\" id=\\\"primeiroBoleto\\\" name=\\\"field228\\\" data-parsley-errors-container=\\\"#errId30\\\">\\r\\n                                                                        Primeiro boleto {{cursoEscolhido.pagamento.taxaMatricula + (cursoEscolhido.pagamento.valorCobrado / cursoEscolhido.pagamento.parcelamento) | currency:'BRL':'symbol':'.2-2' }}\\r\\n                                                                    </label>\\r\\n                                                                <label class=\\\"checkbox\\\" for=\\\"valorMensalidadeBoleto\\\">\\r\\n                                                                        <input checked=\\\"checked\\\" disabled type=\\\"checkbox\\\" value=\\\"166,67\\\" id=\\\"valorMensalidadeBoleto\\\" name=\\\"field228\\\" data-parsley-errors-container=\\\"#errId30\\\">\\r\\n                                                                        {{ cursoEscolhido.pagamento.parcelamento - 1 }} boletos de {{ cursoEscolhido.pagamento.valorCobrado / cursoEscolhido.pagamento.parcelamento | currency:'BRL':'symbol':'.2-2' }}\\r\\n                                                                    </label>\\r\\n                                                                <span id=\\\"errId30\\\" class=\\\"error\\\"></span>\\r\\n                                                            </div>\\r\\n\\r\\n                                                        </div>\\r\\n\\r\\n                                                        <div class=\\\"form-group btn-group group-inline\\\" style=\\\"display: block;\\\">\\r\\n                                                            <button id=\\\"btnMatricularPorBoleto\\\" type=\\\"button\\\" class=\\\"btn btn-primary\\\" name=\\\"Salva\\\" (click)='efeturarMatricula(\\\"boleto\\\")'>Efetuar Matrícula</button>\\r\\n                                                        </div>\\r\\n\\r\\n                                                    </div>\\r\\n                                                </div>\\r\\n                                                <div class=\\\"tab-pane active\\\" id=\\\"tabContent190\\\">\\r\\n                                                    <div class=\\\"\\\">\\r\\n                                                        <div class=\\\"form-group\\\">\\r\\n                                                            <label class=\\\"control-label-left\\\" for=\\\"numeroCartaoCredito\\\">Número do Cartão de Crédito</label>\\r\\n                                                            <div class=\\\"controls\\\">\\r\\n                                                                <input #ccInput='ngModel' [(ngModel)]='cursoEscolhido.pagamento.dadosCartao.numero' id=\\\"numeroCartaoCredito\\\" type='text' class=\\\"form-control k-textbox\\\" placeholder=\\\"Digite o número do Cartão de Crédito\\\" name=\\\"numeroCartaoCredito\\\" dropSpecialCharacters=\\\"true \\\"\\r\\n                                                                    mask=\\\"0000 0000 0000 0000\\\">\\r\\n                                                                <!-- <input type=\\\"tel\\\" autocomplete=\\\"cc-number\\\" id=\\\"cc-number\\\" ccNum> -->\\r\\n                                                                <!-- <input #ccCarai='ngModel' [(ngModel)]='cursoEscolhido.pagamento.dadosCartao.numero' id=\\\"numeroCartaoCredito\\\" type=\\\"tel\\\" class=\\\"form-control k-textbox\\\" data-role=\\\"mask\\\" data-mask=\\\"9999 9999 9999 9999\\\" placeholder=\\\"Digite o número do Cartão de Crédito\\\"\\r\\n                                                                    name=\\\"numeroCartaoCredito\\\" data-parsley-errors-container=\\\"#errId31\\\" required minlength=\\\"4\\\" ccNumber> -->\\r\\n                                                                <!-- <input id=\\\"numeroCartaoCredito\\\" type=\\\"text\\\" class=\\\"form-control k-textbox\\\" data-role=\\\"mask\\\" data-mask=\\\"9999 9999 9999 9999\\\" placeholder=\\\"Digite o número do Cartão de Crédito\\\" name=\\\"numeroCartaoCredito\\\" data-parsley-errors-container=\\\"#errId31\\\"> -->\\r\\n                                                                <!-- <input id=\\\"cc-number\\\" type=\\\"tel\\\" autocomplete=\\\"cc-number\\\" ccNumber> -->\\r\\n                                                                <span id=\\\"errId31\\\" class=\\\"error\\\"></span>\\r\\n                                                            </div>\\r\\n                                                            <!-- Um: {{ccCarai.creditCard | json}} -->\\r\\n                                                        </div>\\r\\n                                                        <div class=\\\"form-group\\\">\\r\\n                                                            <label class=\\\"control-label-left\\\" for=\\\"nomeImpressoCartao\\\">Vencimento do Cartão (ano/mes)</label>\\r\\n                                                            <div class=\\\"controls\\\">\\r\\n                                                                <input #ccMesAnoInput='ngModel' [(ngModel)]='cursoEscolhido.pagamento.dadosCartao.vencimento' mask='00/0099' id=\\\"mesAnoVencimento\\\" type=\\\"text\\\" class=\\\"form-control k-textbox\\\" data-role=\\\"text\\\" placeholder=\\\"Digite o mês e ano Cartão de Crédito, como no exemplo 08/2012\\\"\\r\\n                                                                    name=\\\"mesAnoVencimento\\\" data-parsley-errors-container=\\\"#errId32\\\">\\r\\n                                                                <span id=\\\"errId32\\\" class=\\\"error\\\"></span>\\r\\n                                                            </div>\\r\\n\\r\\n                                                        </div>\\r\\n                                                        <div class=\\\"form-group\\\">\\r\\n                                                            <label class=\\\"control-label-left\\\" for=\\\"nomeImpressoCartao\\\">Nome impresso no Cartão</label>\\r\\n                                                            <div class=\\\"controls\\\">\\r\\n\\r\\n                                                                <input id=\\\"nomeImpressoCartao\\\" type=\\\"text\\\" class=\\\"form-control k-textbox\\\" data-role=\\\"text\\\" placeholder=\\\"Digite o nome que está no Cartão de Crédito\\\" name=\\\"nomeImpressoCartao\\\" data-parsley-errors-container=\\\"#errId32\\\">\\r\\n                                                                <span id=\\\"errId32\\\" class=\\\"error\\\"></span>\\r\\n                                                            </div>\\r\\n\\r\\n                                                        </div>\\r\\n                                                        <div class=\\\"form-group\\\">\\r\\n                                                            <label class=\\\"control-label-left\\\" for=\\\"bandeiraCartaoCredito\\\">Bandeira Cartão:</label>\\r\\n                                                            <div class=\\\"controls\\\">\\r\\n\\r\\n                                                                <select id=\\\"bandeiraCartaoCredito\\\" class=\\\"form-control\\\" name=\\\"bandeiraCartaoCredito\\\" data-parsley-errors-container=\\\"#errId33\\\">\\r\\n                                                                        <option value=\\\"Mastercard\\\">Mastercard</option>\\r\\n                                                                        <option value=\\\"Visa\\\">Visa</option>\\r\\n                                                                        <option value=\\\"Elo\\\">Elo</option>\\r\\n                                                                        <option value=\\\"American Express\\\">American Express</option>\\r\\n                                                                        <option value=\\\"Dinners\\\">Dinners</option>\\r\\n                                                                    </select><span id=\\\"errId33\\\" class=\\\"error\\\"></span></div>\\r\\n\\r\\n                                                        </div>\\r\\n                                                        <div class=\\\"form-group\\\">\\r\\n                                                            <label class=\\\"control-label-left\\\" for=\\\"cvvCartaoCredito\\\">CVV</label>\\r\\n                                                            <div class=\\\"controls\\\">\\r\\n\\r\\n                                                                <input id=\\\"cvvCartaoCredito\\\" type=\\\"text\\\" class=\\\"form-control k-textbox\\\" data-role=\\\"text\\\" placeholder=\\\"Digite o código CVV atrás do Cartão\\\" data-parsley-errors-container=\\\"#errId34\\\">\\r\\n                                                                <span id=\\\"errId34\\\" class=\\\"error\\\"></span>\\r\\n                                                            </div>\\r\\n\\r\\n                                                        </div>\\r\\n                                                        <div class=\\\"form-group btn-group group-inline\\\" style=\\\"display: block;\\\">\\r\\n                                                            <button id=\\\"btnSalvarFormulario\\\" type=\\\"button\\\" class=\\\"btn btn-primary\\\" name=\\\"Salva\\\" (click)='efeturarMatricula(\\\"cartao\\\")'>Efetuar Matrícula</button>\\r\\n                                                        </div>\\r\\n                                                    </div>\\r\\n                                                </div>\\r\\n\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n\\r\\n\\r\\n\\r\\n            </div>\\r\\n        </div>\\r\\n\\r\\n    </div>\\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/component/form-inscricao/form-inscricao.component.html\n// module id = ./src/app/component/form-inscricao/form-inscricao.component.html\n// module chunks = main","module.exports = \"img.icon {\\n  width: 2.5em; }\\n\\n.nav-tabs > li.active > a,\\n.nav-tabs > li.active > a:hover,\\n.nav-tabs > li.active > a:focus {\\n  background-color: #ffe0a6; }\\n\\nselect.promotion {\\n  background-color: blue;\\n  color: white; }\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/component/form-inscricao/form-inscricao.component.scss\n// module id = ./src/app/component/form-inscricao/form-inscricao.component.scss\n// module chunks = main","import { Component, OnInit, DoCheck, ChangeDetectorRef, ElementRef, ViewChild } from '@angular/core';\r\nimport { ApiUltraService } from './../../services/api-ultra.service';\r\nimport { ActivatedRoute } from '@angular/router';\r\n\r\n\r\n@Component({\r\n  selector: 'app-form-inscricao',\r\n  templateUrl: './form-inscricao.component.html',\r\n  styleUrls: ['./form-inscricao.component.scss']\r\n})\r\nexport class FormInscricaoComponent implements OnInit, DoCheck {\r\n  alunoAtual: Aluno = new Aluno();\r\n  cursosAtivos: Array<any> = [];\r\n  private ultimaBuscaValidaCPF = '';\r\n  private ultimaBuscaValidaCEP = '';\r\n  ufs: Array<any> = [];\r\n  municipios: Array<any> = [];\r\n  categorias: Array<any> = [];\r\n  cursos: Array<any> = [];\r\n  cursoEscolhido: Curso = new Curso();\r\n  idCursoSelecionado = '';\r\n  valoresMensalidade: Array<ValoresMensalidade> = [];\r\n  @ViewChild('erroCPF') private erroCPF: ElementRef;\r\n  @ViewChild('selMatricula') private selMatricula: ElementRef;\r\n  @ViewChild('selMensalidade') private selMensalidade: ElementRef;\r\n  @ViewChild('txtCupom') private txtCupom: ElementRef;\r\n  @ViewChild('btnCupom') private btnCupom: ElementRef;\r\n\r\n  constructor(\r\n    public alunoService: ApiUltraService,\r\n    private cdr: ChangeDetectorRef,\r\n    private route: ActivatedRoute,\r\n  ) {\r\n\r\n    this.alunoService.getUF().subscribe((x: Array<any>) => {\r\n      x = x.sort((a, b) => a.nome > b.nome ? 1 : -1);\r\n      this.ufs = x;\r\n    });\r\n    this.alunoService.getMunicipios().subscribe((x: Array<any>) => {\r\n      x = x.sort((a, b) => a.nome > b.nome ? 1 : -1);\r\n      this.municipios = x;\r\n    });\r\n    this.alunoService.getCategorias().subscribe((x: Array<any>) => {\r\n      x = x.sort((a, b) => a.name.pt > b.name.pt ? 1 : -1);\r\n      this.categorias = x;\r\n    });\r\n    this.alunoService.getCursos().subscribe((x: Array<any>) => {\r\n      x = x.sort((a, b) => a.name.pt > b.name.pt ? 1 : -1);\r\n           // .filter((c) => c.published );\r\n      this.cursos = x;\r\n      this.cursoEscolhido.codigoCategoria = Number( this.getCategoriaDoCurso(this.idCursoSelecionado).id );\r\n      this.cursoEscolhido.codigoCurso = Number(this.idCursoSelecionado);\r\n      this.selectCurso({ target : { value : this.idCursoSelecionado }});\r\n    });\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.cursoEscolhido.pagamento.melhorDia = 5;\r\n    this.cursoEscolhido.pagamento.parcelamento = 24;\r\n    this.route.params.subscribe(params => {\r\n      this.idCursoSelecionado = params['id'];\r\n      this.cursoEscolhido.codigoCategoria = Number( this.getCategoriaDoCurso(this.idCursoSelecionado).id );\r\n      this.cursoEscolhido.codigoCurso = Number(this.idCursoSelecionado);\r\n      this.selectCurso({ target : { value : this.idCursoSelecionado }});\r\n    });\r\n  }\r\n\r\n  public ngDoCheck(): void {\r\n    this.cdr.detectChanges();\r\n  }\r\n\r\n  // http://www.geradorcpf.com\r\n  onKeyCPF($event) {\r\n    const testCPF: RegExp = /\\d\\d\\d[.]\\d\\d\\d[.]\\d\\d\\d[-]\\d\\d/;\r\n    const cpf: string = $event.target.value;\r\n    this.alunoAtual.cpf = cpf;\r\n    if (testCPF.test(cpf)) {\r\n      if (this.alunoService.validarCPF(cpf)) {\r\n        if (cpf !== this.ultimaBuscaValidaCPF) {\r\n          // this.erroCPF.nativeElement.innerHTML = '';\r\n          this.alunoService.findUser(cpf).subscribe((a: Array<any>) => {\r\n            if (a.length > 0) {\r\n              // this.cursosAtivos = a[0].cursos.slice();\r\n              // a[0].cursos = [];\r\n              this.ultimaBuscaValidaCPF = cpf;\r\n              this.alunoAtual = a[0];\r\n            }\r\n           });\r\n        }\r\n      } else {\r\n        // this.erroCPF.nativeElement.innerHTML = 'CPF com erro de validação, verifique'\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n\r\n  onKeyWhatsapp($event) {\r\n    this.alunoAtual.whatsapp = $event.target.value;\r\n  }\r\n\r\n  onKeyEmail($event) {\r\n    this.alunoAtual.email = $event.target.value;\r\n  }\r\n\r\n  onKeyCEP($event) {\r\n    const testCEP: RegExp = /\\d\\d\\d\\d\\d[-]\\d\\d\\d/;\r\n    const cep: string = $event.target.value;\r\n    this.alunoAtual.cep = cep;\r\n    if (testCEP.test(cep)) {\r\n      if (cep !== this.ultimaBuscaValidaCEP) {\r\n        this.alunoService.getCEP(cep).subscribe((descCEP: any) => {\r\n          this.alunoAtual.endereco = descCEP.logradouro;\r\n          this.alunoAtual.bairro = descCEP.bairro;\r\n          this.alunoAtual.cidade = descCEP.cidade;\r\n          this.alunoAtual.uf = descCEP.estado;\r\n          this.ultimaBuscaValidaCEP = cep;\r\n        });\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n\r\n  getMunicipiosDaUF(uf) {\r\n    return this.municipios.filter((x) => x.microrregiao.mesorregiao.UF.sigla === uf );\r\n  }\r\n\r\n  getCursosDaCategoria(categoria) {\r\n    return this.cursos.filter((x) => {\r\n      return x.categories.filter((c) => {\r\n        if (c) {\r\n          return c.id === Number(categoria);\r\n        } else {\r\n          return false;\r\n        }\r\n      }).length > 0;\r\n    });\r\n  }\r\n\r\n  getCategoriaDoCurso(curso) {\r\n    const cu: any = this.cursos.filter((c) => c.id === Number(curso));\r\n    if (cu) {\r\n      if (cu.length > 0) {\r\n        return cu[0].categories[0];\r\n      }\r\n    }\r\n    return null;\r\n  }\r\n\r\n  selectCurso(e) {\r\n    const codigoCurso = Number(e.target.value);\r\n    const detalheCurso = this.cursos.filter((c) => c.id === codigoCurso)[0];\r\n    this.cursoEscolhido.pagamento.taxaMatricula = detalheCurso.variants[0].down_payment;\r\n    this.cursoEscolhido.pagamento.valorOriginal = detalheCurso.variants[0].price;\r\n    this.cursoEscolhido.pagamento.valorCobrado = detalheCurso.variants[0].price;\r\n    this.gerarArrayValores(this.cursoEscolhido.pagamento.valorCobrado, 24);\r\n\r\n    this.selMatricula.nativeElement.classList.remove('promotion');\r\n    this.selMensalidade.nativeElement.classList.remove('promotion');\r\n    this.txtCupom.nativeElement.value = '';\r\n    this.txtCupom.nativeElement.disabled = false;\r\n    this.btnCupom.nativeElement.disabled = false;\r\n    return;\r\n  }\r\n\r\n  aplicarCupom(txtCupom) {\r\n    txtCupom = txtCupom.toUpperCase();\r\n    this.cursoEscolhido.pagamento.cupom.codigoCupom = txtCupom.toUpperCase();\r\n    if (this.cursoEscolhido.pagamento.valorOriginal) {\r\n      this.alunoService.processarCupom(\r\n        txtCupom,\r\n        this.cursoEscolhido.pagamento.valorOriginal,\r\n        this.cursoEscolhido.pagamento.taxaMatricula\r\n      ).subscribe((cupomProcessado: any) => {\r\n        this.cursoEscolhido.pagamento.taxaMatricula = cupomProcessado.valorMatriculaCalculado;\r\n        this.cursoEscolhido.pagamento.valorCobrado = cupomProcessado.valorCalculado;\r\n        this.gerarArrayValores(this.cursoEscolhido.pagamento.valorCobrado, 24);\r\n\r\n        this.cursoEscolhido.pagamento.cupom.codigoCupom = cupomProcessado.codigoCupom;\r\n        this.cursoEscolhido.pagamento.cupom.origemCupom = cupomProcessado.origemCupom;\r\n        this.cursoEscolhido.pagamento.cupom.tipoDesconto = cupomProcessado.tipoDesconto;\r\n        this.cursoEscolhido.pagamento.cupom.valorDesconto = cupomProcessado.valorDesconto;\r\n        this.cursoEscolhido.pagamento.cupom.percentualDesconto = cupomProcessado.percentualDesconto;\r\n        this.selMatricula.nativeElement.classList.add('promotion');\r\n        this.selMensalidade.nativeElement.classList.add('promotion');\r\n        this.txtCupom.nativeElement.disabled = true;\r\n        this.btnCupom.nativeElement.disabled = true;\r\n        alert('Parabéns, CUPOM ' + txtCupom + ' válido! Os novos valores estão nos campos em azul!');\r\n      });\r\n    }\r\n  }\r\n\r\n  gerarArrayValores(valor, meses = 24) {\r\n    this.valoresMensalidade = [];\r\n    for ( let i = 1; i <= meses; i += 1) {\r\n      this.valoresMensalidade.push({\r\n        prestacoes: i,\r\n        valor : Math.round(valor / i * 100) / 100,\r\n        display : i + 'X de R$ ' + Math.round(valor / i * 100) / 100\r\n      });\r\n    }\r\n  }\r\n\r\n\r\n  efeturarMatricula(tipoPagamento: string = 'cartao') {\r\n    const saveObj = {\r\n      aluno: this.alunoAtual,\r\n      curso: this.cursoEscolhido,\r\n    };\r\n    saveObj.curso.pagamento.formaPagamento = tipoPagamento;\r\n    this.alunoService.salvarMatricula(saveObj)\r\n        .subscribe((res) => {\r\n          console.log(res);\r\n        });\r\n  }\r\n\r\n  // salvarDados() {\r\n  //   this.alunoService.salvarMatricula(this.alunoAtual)\r\n  //       .subscribe((res) => {\r\n  //         console.log(res);\r\n  //       });\r\n  // }\r\n\r\n}\r\n\r\nexport class Aluno {\r\n  cpf = '';\r\n  nome = '';\r\n  email = '';\r\n  whatsapp = '';\r\n  celular = '';\r\n  opcaoSMS = false;\r\n  cep = '';\r\n  endereco = '';\r\n  numero = '';\r\n  complemento = '';\r\n  bairro = '';\r\n  cidade = '';\r\n  uf = '';\r\n  ufNaturalidade = '';\r\n  cidadeNaturalidade = '';\r\n  sexoMasculino = '';\r\n  dataNascimento = '';\r\n  estadoCivil = '';\r\n  numeroIdentidade = '';\r\n  orgaoExpedidor = '';\r\n  sexo = 'F';\r\n  nomeMae = '';\r\n  nomePai = '';\r\n}\r\n\r\nexport class ValoresMensalidade {\r\n  prestacoes: number;\r\n  valor: number;\r\n  display = '';\r\n}\r\n\r\nexport class DadosCartao {\r\n  numero = '';\r\n  nome = '';\r\n  bandeira = '';\r\n  CVV = '';\r\n  vencimento = '';\r\n}\r\n\r\nexport class CursoPagamentoCupom {\r\n    codigoCupom = '';\r\n    origemCupom = '';\r\n    tipoDesconto = '';\r\n    valorDesconto = 0;\r\n    percentualDesconto = 0;\r\n}\r\n\r\nexport class CursoPagamento {\r\n  taxaMatricula: number;\r\n  valorOriginal: number;\r\n  valorCobrado: number;\r\n  parcelamento: number;\r\n  parcela: number;\r\n  melhorDia: number;\r\n  cupom: CursoPagamentoCupom;\r\n  formaPagamento = '';\r\n  dadosCartao: DadosCartao;\r\n\r\n  constructor() {\r\n    this.cupom = new CursoPagamentoCupom();\r\n    this.dadosCartao = new DadosCartao();\r\n  }\r\n}\r\n\r\nexport class Curso {\r\n  codigoCurso: number;\r\n  codigoCategoria: number;\r\n  nomeCurso;\r\n  deAcordo: boolean;\r\n  pagamento: CursoPagamento;\r\n\r\n  constructor() {\r\n    this.pagamento = new CursoPagamento();\r\n  }\r\n}\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/component/form-inscricao/form-inscricao.component.ts","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { environment } from '../../environments/environment';\r\nimport 'rxjs/add/operator/map';\r\n\r\nconst httpOptions = {\r\n  headers: new HttpHeaders({ 'Content-Type': 'application/json' })\r\n};\r\n\r\nconst API = {\r\n  FIND_USER : environment.rootApi + 'api/alunos/find/',\r\n  SAVE_USER : environment.rootApi + 'api/matricula/inscrever',\r\n  GET_CATEGORIAS: environment.rootApi + 'api/categorias/list',\r\n  GET_CURSOS: environment.rootApi + 'api/cursos/list',\r\n  POST_PROCESS_CUPOM: environment.rootApi + 'api/cupom/calcula',\r\n  UF: '//servicodados.ibge.gov.br/api/v1/localidades/estados',\r\n  MUNICIPIOS: '//servicodados.ibge.gov.br/api/v1/localidades/municipios',\r\n  CEP: '//api.postmon.com.br/v1/cep/',\r\n};\r\n\r\n@Injectable()\r\nexport class ApiUltraService {\r\n\r\n  public alunoAtual: any = null;\r\n  public listaUF: Array<any> = [];\r\n  public listaMunicipios: Array<any> = [];\r\n\r\n  constructor(\r\n    public http: HttpClient,\r\n  ) {\r\n  }\r\n\r\n  findUser(cpf) {\r\n    return this.http.get(API.FIND_USER + cpf)\r\n      .map((aluno) => {\r\n        this.alunoAtual = aluno;\r\n        return aluno;\r\n      });\r\n  }\r\n\r\n  getUF() {\r\n    return this.http.get(API.UF)\r\n    .map((listaUF: Array<any>) => {\r\n      this.listaUF = listaUF;\r\n      return listaUF;\r\n    });\r\n  }\r\n\r\n  getCEP(cep) {\r\n    return this.http.get(API.CEP + cep);\r\n  }\r\n\r\n  getMunicipios() {\r\n    return this.http.get(API.MUNICIPIOS)\r\n    .map((listaMunicipios: Array<any>) => {\r\n      this.listaMunicipios = listaMunicipios;\r\n      return listaMunicipios;\r\n    });\r\n  }\r\n\r\n  getCursos() {\r\n    return this.http.get(API.GET_CURSOS);\r\n  }\r\n\r\n  getCategorias() {\r\n    return this.http.get(API.GET_CATEGORIAS);\r\n  }\r\n\r\n  processarCupom(Cupom: string, valorCobrado: number, taxaMatricula: number) {\r\n    return this.http.post(API.POST_PROCESS_CUPOM\r\n      + '/' + Cupom\r\n      + '/' + valorCobrado.toString()\r\n      + '/' + taxaMatricula.toString(), {}\r\n        );\r\n  }\r\n\r\n  salvarMatricula(obj) {\r\n    return this.http.post(API.SAVE_USER, obj);\r\n  }\r\n\r\n  validarCPF(cpf) {\r\n    cpf = cpf.replace(/[^\\d]+/g, '');\r\n    if (cpf === '') { return false; }\r\n    // Elimina CPFs invalidos conhecidos\r\n    if (cpf.length !== 11 ||\r\n        cpf === '00000000000' ||\r\n        cpf === '11111111111' ||\r\n        cpf === '22222222222' ||\r\n        cpf === '33333333333' ||\r\n        cpf === '44444444444' ||\r\n        cpf === '55555555555' ||\r\n        cpf === '66666666666' ||\r\n        cpf === '77777777777' ||\r\n        cpf === '88888888888' ||\r\n        cpf === '99999999999') {\r\n            return false;\r\n    }\r\n    // Valida 1o digito\r\n    let add = 0;\r\n    for (let i = 0; i < 9; i ++) {\r\n        add += parseInt(cpf.charAt(i), 10) * (10 - i);\r\n    }\r\n    let rev = 11 - (add % 11);\r\n    if (rev === 10 || rev === 11) {\r\n        rev = 0;\r\n    }\r\n    if (rev !== parseInt(cpf.charAt(9), 10)) {\r\n        return false;\r\n    }\r\n    // Valida 2o digito\r\n    add = 0;\r\n    for (let i = 0; i < 10; i ++) {\r\n        add += parseInt(cpf.charAt(i), 10) * (11 - i);\r\n    }\r\n    rev = 11 - (add % 11);\r\n    if (rev === 10 || rev === 11) {\r\n        rev = 0;\r\n    }\r\n    if (rev !== parseInt(cpf.charAt(10), 10)) {\r\n        return false;\r\n    }\r\n    return true;\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/services/api-ultra.service.ts","// The file contents for the current environment will overwrite these during build.\r\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\r\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\r\n// The list of which env maps to which file can be found in `.angular-cli.json`.\r\n\r\nexport const environment = {\r\n  production: false,\r\n  // rootApi : 'https://inscricao.ultraposgraduacao.com.br/'\r\n  rootApi : 'http://localhost:3002/'\r\n};\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/environments/environment.ts","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.log(err));\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/main.ts"],"sourceRoot":"webpack:///"}